//
// named configuration
//
options
{
	/* make named use port 53 for the source of all queries, to allow
         * firewalls to block all ports except 53:
         */
	//query-source    port 53;
	//query-source-v6 port 53;
	
	// Put files that named is allowed to write in the data/ directory:
	directory "/var/named"; // the default
	dump-file 		"data/cache_dump.db";
        statistics-file 	"data/named_stats.txt";
        memstatistics-file 	"data/named_mem_stats.txt";

};
logging 
{
/*      If you want to enable debugging, eg. using the 'rndc trace' command,
 *      named will try to write the 'named.run' file in the $directory (/var/named).
 *      By default, SELinux policy does not allow named to modify the /var/named directory,
 *      so put the default debug log file in data/ :
 */
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};
//
// All BIND 9 zones are in a "view", which allow different zones to be served
// to different types of client addresses, and for options to be set for groups
// of zones.
//
// By default, if named.conf contains no "view" clauses, all zones are in the 
// "default" view, which matches all clients.
// 
// If named.conf contains any "view" clause, then all zones MUST be in a view; 
// so it is recommended to start off using views to avoid having to restructure

// your configuration files in the future.
//

view "internal"
{
/* This view will contain zones you want to serve only to "internal" clients
   that connect via your directly attached LAN interfaces - "localnets" .
 */
	match-clients		{ localnets; };
	match-destinations	{ localnets; };
	recursion yes;
	// all views must contain the root hints zone:
	include "/etc/named.root.hints";

	include "/etc/named.rfc1912.zones";
	// you should not serve your rfc1912 names to non-localhost clients.
 
	// These are your "authoritative" internal zones, and would probably
	// also be included in the "localhost_resolver" view above :


	//
	// include other internal master zones
	//
	<%- internal_master_zones.each do |zone| -%>
	zone "<%= zone %>" IN {
		type master;
		file "<%= zone %>.internal.zone";
		allow-update { none; };
		notify no;
	};
	<%- end -%>

        <%- internal_rev_zones.each do |zone| -%>
        zone "<%= zone %>.in-addr.arpa" IN {
                type master;
                file "<%= zone %>.in-addr.arpa";
                allow-update { none; };
                notify no;
        };
        <%- end -%>

	//
	// include other internal slave zones
	//
	<%- internal_slave_zones.each do |zone| -%>
	zone "<%= zone %>" IN {
		type slave;
		file "<%= zone %>.internal.zone";
		masters {
			<% internal_slave_masters.each do |master| %><%= master %>;<% end %>
		};
	};
	<%- end -%>
};

include "/etc/rndc.key";

view    "external"
{
/* This view will contain zones you want to serve only to "external" clients
 * that have addresses that are not on your directly attached LAN interface subnets:
 */
	match-clients		{ any; };

	recursion no;
	// you'd probably want to deny recursion to external clients, so you don't
        // end up providing free DNS service to all takers

	// all views must contain the root hints zone:
	include "/etc/named.root.hints";

	// These are your "authoritative" external zones, and would probably
        // contain entries for just your web and mail servers:


	//
	// include other external master zones
	//
	<% external_master_zones.each do |zone| %>
	zone "<%= zone %>" IN {
		type master;
		file "<%= zone %>.external.zone";
		allow-update { none; };
		notify no;
	};
	<% end %>

	//
	// include other external slave zones
	//
	<% external_slave_zones.each do |zone| %>
	zone "<%= zone %>" IN {
		type slave;
		file "<%= zone %>.external.zone";
		masters {
			<% external_slave_masters.each do |master|  %><%= master %>;<% end %>
		};
	};
	<% end %>

};
